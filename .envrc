if [ -f .env ] ; then
    echo "Exporting variables from .env"
	while IFS= read -r line || [ -n "$line" ]; do
	    # Skip empty lines and lines starting with #
	    [ -z "$line" ] && continue
	    echo "$line" | grep -qE '^[[:space:]]*#' && continue
	
	    # Extract key and value
	    key=$(echo "$line" | cut -d '=' -f 1 | tr -d '[:space:]')
	    value=$(echo "$line" | cut -d '=' -f 2-)
	
	    # Remove leading and trailing spaces from the value
	    value=$(echo "$value" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
	
	    # Use eval to properly handle spaces and quotes
    	if [ -z $GITHUB_ACTION ] ; then
	    	eval export $key=\"$value\"
		else
			echo "$key=$value" >> $GITHUB_OUTPUT
		fi
	done < .env
fi

if has kerl; then
	ERLANGMK_CAP_VER="OTP-$ERLANG_VERSION"
    ERLANG_INSTALLATION="$(kerl list installations | grep $ERLANGMK_CAP_VER | cut -d' ' -f2)"
    if [ -f "$ERLANG_INSTALLATION/activate" ] ; then
        echo "Using Erlang $ERLANG_VERSION (in $ERLANG_INSTALLATION) via kerl."
        . $ERLANG_INSTALLATION/activate
    else
        echo "Erlang $ERLANG_VERSION not available. Please build it first with command \"kerl build $ERLANG_VERSION $ERLANGMK_CAP_VER && kerl install $ERLANGMK_CAP_VER  ~/erlang/$ERLANGMK_CAP_VER\" and then restart the shell"
    fi
else
    echo "kerl not available; using default system Erlang."
fi
